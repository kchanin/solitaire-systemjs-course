stage 'CI'
node{
   // git branch: 'jenkins2-course', url: 'git@github.com:kchanin/solitaire-systemjs-course.git'
    checkout scm
    
    sh 'npm install'
    
    stash excludes: 'test-results/**', includes: '**', name: 'everything'
    
    sh 'npm run test-single-run -- --browsers PhantomJS'
            
    step([$class: 'JUnitResultArchiver', testResults: 'test-results/**/test-results.xml'])
    
    archiveArtifacts allowEmptyArchive: true, artifacts: 'app/**', followSymlinks: false, onlyIfSuccessful: true
}

node('mac') {
        sh 'ls'
        sh 'rm -rf *'
        unstash 'everything'
        sh 'ls'
}

stage 'Browser Testing'
parallel chrome:{
    runTests("Chrome")
}, firefox:{
    runTests("Firefox")
}, safari:{
    runTests("Safari")
}

node{
    notify("Deploy to staging?")
}
input 'Deploy to staging?'

stage name: 'Deploy', concurrency: 1
node{
    sh "echo '<h1>${env.BUILD_DISPLAY_NAME}</h1>' >> app/index.html"
    sh 'docker-compose up -d --build'
    
    notify 'Solitaire Deployed'
    
}

def runTests(browser){
    node{
        sh 'rm -rf *'
        unstash 'everything'
        sh "npm run test-single-run -- --browsers ${browser}"
        step([$class: 'JUnitResultArchiver', testResults: 'test-results/**/test-results.xml'])
    }
}

def notify(status){
    emailext (
      to: "kchanin@gmail.com",
      subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
      body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
    )
}

